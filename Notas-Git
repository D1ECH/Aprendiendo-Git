Para que Git haga un seguimiento de los archivos del directorio seleccionado, o parte de ellos, y hacer un respaldo de ellos, el primer comando a utilizar es GIT INIT

Tanto si vamos a hacer seguimiento a todos los archivos como se vamos a hacer seguimiento a alguno/algunos --> GIT ADD (nombre del archivo) / si queremos en vez de seleccionar uno seleccionar todos directamente --> GIT ADD .

Para trasladar del área de ensayo los archivos de los que se hace seguimiento, al repositorio local --> GIT COMMIT

Para ver el estado de los archivos del directorio en el que hemos inicializado git --> GIT STATUS -S

Los interrogantes en rojo significan que los archivos NO están siendo sometidos a seguimiento 

Tras hacer el GIT ADD a uno/varios archivos, los interrogantes rojos cambian por una A verde --> el archivo está en la Staging Area, ha sido agregado

Para pasar del staging area y almacenar ya el archivo/archivos que está siguiendo Git al repositorio local de este --> GIT COMMIT -M " "

Tras el COMMIT al hacer STATUS -S ya no sale el archivo

Cuando hacemos un cambio, ya sea en el Staging area o en el respositorio local, aparece una M al ver el estado en rojo --> tenemos que volver a hacer ADD para poder hacer COMMIT

Para ver todas las instantáneas/commits del repositorio local --> git log --oneline

Para restaurar una versión anterior --> git reset --hard [código de la instantánea]

OJO --> para hacer un ADD y COMMIT a la vez --> GIT COMMIT -AD " "

Para modificar la descripción de un COMMIT --> git commit --amend (el cual abre VIM), una vez dentro de VIM --> :i - editar, esc - salir de edición, :wq - guardar y salir

Se puede modificar archivos desde github y para sincronizarlo con el almacenamiento local --> GIT PULL

Se pueden añadir tags al proyecto para indicar el final de una versión y así saber que pese a que puede actualizarse, hasta ahí estaría "terminado" --> git tag [etiqueta] -m " "

Vamos a crear una rama para hacer pruebas en el fichero prueba.txt --> git branch [nombre]

Para movernos de rama --> git checkout [nombre branch]

Para hacer un merge, debemos estar en la rama main --> git merge [nombre de la rama a fusionar]
